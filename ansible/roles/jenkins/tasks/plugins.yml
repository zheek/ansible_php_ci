
- name: ensure jenkins is running
  service: name=jenkins state=started

# If the jenkins service is not fully running, when you try 
# to download the jenkins client, it will result is a 
# corrupted client (size = 0). The following actions detect a
# corrupted client and delete it
- stat: path={{ jenkins_cli }}
  register: jenkins_cli_found
- file: path={{ jenkins_cli }} state=absent
  when: jenkins_cli_found is defined and jenkins_cli_found.stat.size == 0

- name: Get Jenkins client
  shell: wget {{ jenkins_host }}/jnlpJars/jenkins-cli.jar -O {{ jenkins_cli }} creates={{ jenkins_cli }}

- name: Create update folder
  file:
     path: /var/lib/jenkins/updates
     state: directory

- name: update jenkins update center
  shell: wget http://updates.jenkins-ci.org/update-center.json -qO- | sed '1d;$d'  > /var/lib/jenkins/updates/default.json
    creates="/var/lib/jenkins/updates/default.json"

- name: Install required plugins
  command: java -jar {{ jenkins_cli }} -s {{ jenkins_host }} install-plugin {{ item }}
  with_items: jenkins_required_plugins
  notify: Restart jenkins

- name: Install extra plugins
  command: java -jar {{ jenkins_cli }} -s {{ jenkins_host }} install-plugin {{ item }}
  with_items: jenkins_extra_plugins
  notify: Restart jenkins
